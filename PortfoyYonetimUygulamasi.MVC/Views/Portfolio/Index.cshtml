@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@using Microsoft.AspNetCore.Routing.Internal
@model PortfoyYonetimUygulamasi.MVC.ViewModels.PortfolioViewModel

<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Skydash Admin</title>
    <!-- plugins:css -->
    <link rel="stylesheet" href="~/vendors/feather/feather.css">
    <link rel="stylesheet" href="~/vendors/css/vendor.bundle.base.css">
    <!-- endinject -->
    <!-- Plugin css for this page -->
    <link rel="stylesheet" href="~/vendors/datatables.net-bs4/dataTables.bootstrap4.css">
    <link rel="stylesheet" type="text/css" href="~/js/select.dataTables.min.css">
    <!-- End plugin css for this page -->
    <!-- inject:css -->
    <link rel="stylesheet" href="~/css/vertical-layout-light/style.css">
    <!-- endinject -->
</head>
<body>
    <div class="content-wrapper">
        <!-- partial -->
        <div class="main-panel">
            <div class="content-wrapper">
                <div class="row">
                    <div class="col-md-12 grid-margin">
                        <div class="row">
                            <div class="col-12 col-xl-8 mb-4 mb-xl-0">
                                <h3 class="font-weight-bold">Kripto Portföy Takibi</h3>
                                <h6 class="font-weight-normal mb-0">Kâr, zarar ve portföy değerinizi kullanıcı dostu platformumuzda takip edin.</h6>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 grid-margin stretch-card">
                        <div class="card tale-bg">
                            <img src="/images/dashboard/kriptopara.png" alt="people">
                        </div>
                    </div>
                    <div style=" float:right">
                        @if (Model.CheckPortfolioPartial == true)
                        {
                            <div class="table-responsive">
                                <table class="table table-striped">

                                    <h5>Mevcut Bakiye:  @Model.CoinWallets.Select(x => x.TotalWelthOfWallet).FirstOrDefault()</h5>
                                    <br />
                                    <h2>Varlıkların</h2>
                                    <br />
                                    <thead class="thead-dark">
                                        <tr>
                                            <th scope="col">Coin Adı</th>
                                            <th scope="col">Coin Miktarı</th>
                                            <th scope="col">Ortalama Alış Fiyatı</th>
                                            <th scope="col">Sahip Olunan Toplam Coin Fiyatı</th>
                                            <th scope="col">İşlemler </th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        @foreach (var coins in Model.CoinWallets)
                                        {
                                            <tr>
                                                <td>  @coins.CoinName</td>
                                                <td>  @coins.AmountOfCoin</td>
                                                <td>  @coins.AvarageBuyPrice</td>
                                                <td>  @coins.TotalWelthOfCoin</td>
                                                <td> <button id="btnCreateTransaction" data-toggle="modal" data-target="#createTransactionModal" class="btn btn-light">Yeni Ekle </button></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            @*@Html.PartialAsync("_PortfolioDetailPartial");*@
                            <!-- işlem ekle modal -->
                            <div class="modal fade" id="createTransactionModal" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h3 class="modal-title" id="exampleModalCenterTitle">İşlem Ekle</h3>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <ul class="nav nav-tabs" id="tabContent">
                                                <li class="active"><a href="#buy" data-toggle="tab">Satın Al&nbsp;| </a></li>
                                                <li><a href="#sell" data-toggle="tab">&nbsp; Satış Yap &nbsp;| </a></li>
                                                <li><a href="#transfer" data-toggle="tab">&nbsp; Transfer Et</a></li>
                                            </ul>
                                            <div class="tab-content" style="background-color:lightskyblue">
                                                <div class="tab-pane active" id="buy">
                                                    @using (Html.BeginForm("BeginTransaction", "Portfolio", FormMethod.Post))
                                                    {
                                                        <p><b>Coin Seçiniz</b></p>@*, @readonly = "readonly"*@
                                                        @Html.DropDownListFor(x => x.CreateTransactionDto.CoinName,
                                                            (List<SelectListItem>)ViewBag.dgr, new { @class = "form-control", id = "buyCoins", @onchange = "DdlChange(this.value,this.id)" })<br />
                                                        <p><b>Coin Fiyatı</b></p>
                                                        @Html.TextBoxFor(m => m.CreateTransactionDto.CoinPrice, new { @type = "text", @id = "txtPrice" })
                                                        <p><b></b></p>
                                                        <p><b>Adet</b></p>
                                                        @Html.TextBoxFor(m => m.CreateTransactionDto.CoinAmount, new { @type = "text", @id = "txtAmount", @onchange = "CalculateTotalAmount(this.value,this.id)" })
                                                        <p><b></b></p>
                                                        <p><b>Toplam Tutar</b></p>
                                                        @Html.TextBoxFor(m => m.CreateTransactionDto.TotalAmount, new { @type = "text", @id = "txtTotalAmount" })
                                                        @*@Html.TextBoxFor(m => m.CreateTransactionDto.TransactionType, new { @Value = "4" })*@

                                                        <p><b></b></p>
                                                        <button class="btn btn-primary">Satın Al</button>
                                                    }
                                                </div>
                                                <div class="tab-pane" id="sell">
                                                    @using (Html.BeginForm("SellTransaction", "Portfolio", FormMethod.Post))
                                                    {
                                                        <p><b>Coin Seçiniz</b></p>@*, @readonly = "readonly"*@
                                                        @Html.DropDownListFor(x => x.CreateTransactionDto.CoinName,
                                                            (List<SelectListItem>)ViewBag.dgr, new { @class = "form-control", id = "sellCoins", @onchange = "DdlChange(this.value,this.id)" })<br />
                                                        <p><b>Coin Fiyatı</b></p>
                                                        @Html.TextBoxFor(m => m.CreateTransactionDto.CoinPrice, new { @type = "text", @id = "txtPriceSell" })<br />
                                                        <p><b></b></p>
                                                        <p><b>Adet</b></p>
                                                        @Html.TextBoxFor(m => m.CreateTransactionDto.CoinAmount, new { @type = "text", @id = "txtAmountSell", @onchange = "CalculateTotalAmount(this.value,this.id)" })
                                                        <p><b></b></p>
                                                        <p><b>Toplam Tutar</b></p>
                                                        @Html.TextBoxFor(m => m.CreateTransactionDto.TotalAmount, new { @type = "text", @id = "txtTotalAmountSell" })
                                                        @*@Html.TextBoxFor(m => m.CreateTransactionDto.TransactionType, new { @Value = "4" })*@

                                                        <p><b></b></p>
                                                        <button class="btn btn-primary">Satış Yap</button>
                                                    }
                                                </div>
                                                <div class="tab-pane" id="transfer">
                                                    @using (Html.BeginForm("TransferTransaction", "Portfolio", FormMethod.Post))
                                                    {
                                                        <p><b>Coin Seçiniz</b></p>@*, @readonly = "readonly"*@
                                                        @Html.DropDownListFor(x => x.CreateTransactionDto.CoinName,
                                                            (List<SelectListItem>)ViewBag.dgr, new { @class = "form-control", id = "transferCoins", @onchange = "DdlChange(this.value,this.id)" })<br />
                                                        <p><b>Coin Fiyatı</b></p>
                                                        @Html.TextBoxFor(m => m.CreateTransactionDto.CoinPrice, new { @type = "text", @id = "txtPriceTransfer" })<br />
                                                        <p><b></b></p>
                                                        <p><b>Adet</b></p>
                                                        @Html.TextBoxFor(m => m.CreateTransactionDto.CoinAmount, new { @type = "text", @id = "txtAmountTransfer", @onchange = "CalculateTotalAmount(this.value,this.id)" })
                                                        <p><b></b></p>
                                                        <p><b>Toplam Tutar</b></p>
                                                        @Html.TextBoxFor(m => m.CreateTransactionDto.TotalAmount, new { @type = "text", @id = "txtTotalAmountTransfer" })
                                                        @*@Html.TextBoxFor(m => m.CreateTransactionDto.TransactionType, new { @Value = "4" })*@
                                                        <p><b></b></p>
                                                        <button class="btn btn-primary">Transfer Et</button>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                                            <button class="btn btn-primary">Değişiklikleri Kaydet</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <h4>&nbsp;&nbsp;Bütün Portföyler</h4><br />
                <div style="background-color:white; border-color:white; border-width:10px ; border-style:outset; width:50%">
                    <div>
                        <div>
                            <div class="table-responsive">
                                @foreach (var x in Model.UserPortfolioes)
                                {
                                    @using (Html.BeginForm("Index", "Portfolio", new { id = x.Id, check = true }, FormMethod.Post))
                                    {
                                        <div class="form-sample">
                                            <div class="form-group">
                                                <li> <button class="btn btn-close-white">@x.PortfolioName </button> </li>
                                            </div>
                                        </div>
                                    }
                                }
                                <button type="button" class="btn btn-dark " id="btnCreatePortfolio" data-toggle="modal" data-target="#createPortfolioModal">Portföy Oluştur</button>
                            </div>
                            <div />
                        </div>
                    </div>
                </div>
                <!-- content-wrapper ends -->
                <!-- partial:partials/_footer.html -->
                <!-- partial -->
            </div>
            <!-- main-panel ends -->
            <!-- portföy ekle -->
            <div class="modal fade" id="createPortfolioModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLongTitle">Portföy Oluştur</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body" style="background-color:lightskyblue">
                            @using (Html.BeginForm("CreatePortfolio", "Portfolio", FormMethod.Post))
                            {
                                <div class="form-sample">
                                    <div class="form-group">
                                        <p><b>Portföy İsmi</b></p>
                                        @*@Html.LabelFor(x => x.createPortfolioDto.PortfolioName, new { @class = "form-control", TextWriter = "Portföy İsmi: " })*@
                                        @Html.TextBoxFor(x => x.createPortfolioDto.PortfolioName, new { @class = "form-control" })
                                    </div>
                                </div>
                                <button class="btn btn-primary">Oluştur</button>
                            }
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Çıkış</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="~/vendors/js/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- Plugin js for this page -->
    <script src="~/vendors/datatables.net/jquery.dataTables.js"></script>
    <script src="~/vendors/datatables.net-bs4/dataTables.bootstrap4.js"></script>
    <script src="~/js/dataTables.select.min.js"></script>
</body>
</html>

<script src="~/js/chosen.jquery.js"></script>

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<link href="~/css/bootstrap-chosen.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" />

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js">
</script>

<script type="text/javascript">
    $('#createPortfolioModal').on('shown.bs.modal',
        function() {
            $('#btnCreatePortfolio').trigger('focus');
        });
    $('#createTransactionModal').on('shown.bs.modal',
        function() {
            $('#btnCreateTransaction').trigger('focus');
        });
    $(function() {
        $("#coins").select2();
        console.log("gird");
    });

    function DdlChange(val,type) {

        var selected = val;
        console.log(selected);
        $.ajax({
            type: "POST",
            dataType: "json",
            url: '@Url.Action("GetCoinName", "Portfolio")',
            data: { Id: selected },
            success: function(response) {
                var price = jQuery.parseJSON(response);
                if (type === "buyCoins")
                    $("#txtPrice").val(price);
                else if (type === "sellCoins") {
                    console.log("sel");
                    $("#txtPriceSell").val(price);
                }
                else if (type === "transferCoins")
                    $("#txtPriceTransfer").val(price);

            },
            error: function(response) {
                console.log("basarisiz");

            }
        });
    }

    function CalculateTotalAmount(val, type) {

        if (type === "txtAmount")
        {
            var amount = $("#txtAmount").val();
            var price=$("#txtPrice").val();
            var totalAmount = amount * price;
            $("#txtTotalAmount").val(totalAmount);
        }

       else if (type === "txtAmountSell") {
            var amount2 = $("#txtAmountSell").val();
            var price2 = $("#txtPriceSell").val();
            var totalAmount2 = amount2 * price2;
            $("#txtTotalAmountSell").val(totalAmount2);
        }

       else if (type === "txtAmountTranfer") {
            var amount3 = $("#txtAmountTransfer").val();
            var price3 = $("#txtPriceTransfer").val();
            var totalAmount3 = amount3 * price3;
            $("#txtTotalAmountTransfer").val(totalAmount3);
        }
    }
</script>

