@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@using Microsoft.AspNetCore.Routing.Internal
@model PortfoyYonetimUygulamasi.MVC.ViewModels.PortfolioViewModel
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<link href="~/css/bootstrap-chosen.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" />

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js">
</script>
<script type="text/javascript">
    $('#createPortfolioModal').on('shown.bs.modal',
        function() {
            $('#btnCreatePortfolio').trigger('focus');
        });
    $('#createTransactionModal').on('shown.bs.modal',
        function() {
            $('#btnCreateTransaction').trigger('focus');
        });
    $(function() {
        $("#coins").select2();
        console.log("gird");
    });

    function DdlChange(val,type) {
        
        var selected = val;
        console.log(selected);
        $.ajax({
            type: "POST",
            dataType: "json",
            url: '@Url.Action("GetCoinName", "Portfolio")',
            data: { Id: selected },
            success: function(response) {
                var price = jQuery.parseJSON(response);
                if (type === "buyCoins")
                    $("#txtPrice").val(price);
                else if (type === "sellCoins") {
                    console.log("sel");
                    $("#txtPriceSell").val(price);
                }
                else if (type === "transferCoins")
                    $("#txtPriceTransfer").val(price);

            },
            error: function(response) {
                console.log("basarisiz");

            }
        });
    }

    function CalculateTotalAmount(val, type) {

        if (type === "txtAmount")
        {
            var amount = $("#txtAmount").val();
            var price=$("#txtPrice").val();
            var totalAmount = amount * price;
            $("#txtTotalAmount").val(totalAmount);
        }

       else if (type === "txtAmountSell") {
            var amount2 = $("#txtAmountSell").val();
            var price2 = $("#txtPriceSell").val();
            var totalAmount2 = amount2 * price2;
            $("#txtTotalAmountSell").val(totalAmount2);
        }

       else if (type === "txtAmountTranfer") {
            var amount3 = $("#txtAmountTransfer").val();
            var price3 = $("#txtPriceTransfer").val();
            var totalAmount3 = amount3 * price3;
            $("#txtTotalAmountTransfer").val(totalAmount3);
        }
    }
</script>

<button type="button" class="btn btn-dark btn-lg btn-block" id="btnCreatePortfolio" data-toggle="modal" data-target="#createPortfolioModal">Portföy Oluştur</button>
@foreach (var x in Model.UserPortfolioes)
{
    @using (Html.BeginForm("Index", "Portfolio", new { id = x.Id, check = true }, FormMethod.Post))
    {
        <div class="form-sample">
            <div class="form-group">
                <li> <button class="btn btn-warning">@x.PortfolioName </button> </li>
            </div>
        </div>
    }
}
<div>
    @if (Model.CheckPortfolioPartial == true)
    {

        <div>
            <table class="table table-striped table-dark">
                <p> Toplam Mal Varlığı: @Model.CoinWallets.Select(x => x.TotalWelthOfWallet).FirstOrDefault()</p>
                <thead>
                    <tr>
                        <th scope="col">Coin Adı</th>
                        <th scope="col">Coin Miktarı</th>
                        <th scope="col">Ortalama Alış Fiyatı</th>
                        <th scope="col">Sahip Olunan Toplam Coin Fiyatı</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var coins in Model.CoinWallets)
                    {
                        <tr>
                            <td>  @coins.CoinName</td>
                            <td>  @coins.AmountOfCoin</td>
                            <td>  @coins.AvarageBuyPrice</td>
                            <td>  @coins.TotalWelthOfCoin</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @*@Html.PartialAsync("_PortfolioDetailPartial");*@
        <button id="btnCreateTransaction" data-toggle="modal" data-target="#createTransactionModal" class="btn btn-warning">Yeni Ekle </button>


        <!-- işlem ekle modal -->
        <div class="modal fade" id="createTransactionModal" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalCenterTitle">İşlem Ekle</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">

                        <ul class="nav nav-tabs" id="tabContent">
                            <li class="active"><a href="#buy" data-toggle="tab">Satın Al </a></li>
                            <li><a href="#sell" data-toggle="tab"> Satış Yap </a></li>
                            <li><a href="#transfer" data-toggle="tab"> Transfer Et</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active" id="buy">
                                @using (Html.BeginForm("BeginTransaction", "Portfolio", FormMethod.Post))
                                {
                                    <p>    Coin Seçiniz</p>@*, @readonly = "readonly"*@
                                    @Html.DropDownListFor(x => x.CreateTransactionDto.CoinName,
                                        (List<SelectListItem>)ViewBag.dgr, new { @class = "form-control", id = "buyCoins", @onchange = "DdlChange(this.value,this.id)" })
                                    <p>Coin Fiyatı</p>
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.CoinPrice, new { @type = "text", @id = "txtPrice" })<br />
                                    <p>  Adet</p>
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.CoinAmount, new { @type = "text", @id = "txtAmount", @onchange = "CalculateTotalAmount(this.value,this.id)" })
                                    <p>Toplam Tutar</p>
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.TotalAmount, new { @type = "text", @id = "txtTotalAmount" })
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.TransactionType, new { @Value = "4" })


                                    <button class="btn btn-primary">Satın Al</button>
                                }
                            </div>

                            <div class="tab-pane" id="sell">
                                @using (Html.BeginForm("SellTransaction", "Portfolio", FormMethod.Post))
                                {
                                    <p>    Coin Seçiniz</p>@*, @readonly = "readonly"*@
                                    @Html.DropDownListFor(x => x.CreateTransactionDto.CoinName,
                                        (List<SelectListItem>)ViewBag.dgr, new { @class = "form-control", id = "sellCoins", @onchange = "DdlChange(this.value,this.id)" })
                                    <p>Coin Fiyatı</p>
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.CoinPrice, new { @type = "text", @id = "txtPriceSell" })<br />
                                    <p>  Adet</p>
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.CoinAmount, new { @type = "text", @id = "txtAmountSell", @onchange = "CalculateTotalAmount(this.value,this.id)" })
                                    <p>Toplam Tutar</p>
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.TotalAmount, new { @type = "text", @id = "txtTotalAmountSell" })
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.TransactionType, new { @Value = "4" })


                                    <button class="btn btn-primary">Satış Yap</button>
                                }
                            </div>
                            <div class="tab-pane" id="transfer">
                                @using (Html.BeginForm("TransferTransaction", "Portfolio", FormMethod.Post))
                                {
                                    <p>    Coin Seçiniz</p>@*, @readonly = "readonly"*@
                                    @Html.DropDownListFor(x => x.CreateTransactionDto.CoinName,
                                        (List<SelectListItem>)ViewBag.dgr, new { @class = "form-control", id = "transferCoins", @onchange = "DdlChange(this.value,this.id)" })
                                    <p>Coin Fiyatı</p>
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.CoinPrice, new { @type = "text", @id = "txtPriceTransfer" })<br />
                                    <p>  Adet</p>
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.CoinAmount, new { @type = "text", @id = "txtAmountTransfer", @onchange = "CalculateTotalAmount(this.value,this.id)" })
                                    <p>Toplam Tutar</p>
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.TotalAmount, new { @type = "text", @id = "txtTotalAmountTransfer" })
                                    @Html.TextBoxFor(m => m.CreateTransactionDto.TransactionType, new { @Value = "4" })


                                    <button class="btn btn-primary">Transfer Et</button>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button class="btn btn-primary">Save changes</button>
                    </div>
                </div>
            </div>
        </div>

    }

</div>

<!-- portföy ekle -->
<div class="modal fade" id="createPortfolioModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Portföy Oluştur</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CreatePortfolio", "Portfolio", FormMethod.Post))
                {
                    <div class="form-sample">
                        <div class="form-group">
                            @Html.LabelFor(x => x.createPortfolioDto.PortfolioName, new { @class = "form-control", TextWriter = "Portföy İsmi: " })
                            @Html.TextBoxFor(x => x.createPortfolioDto.PortfolioName, new { @class = "form-control" })
                        </div>
                    </div>
                    <button class="btn btn-warning">Oluştur</button>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Çıkış</button>

            </div>
        </div>
    </div>
</div>

<script src="~/js/chosen.jquery.js"></script>
